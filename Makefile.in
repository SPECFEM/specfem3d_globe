#=====================================================================
#
#          S p e c f e m 3 D  G l o b e  V e r s i o n  5 . 1
#          --------------------------------------------------
#
#          Main authors: Dimitri Komatitsch and Jeroen Tromp
#                        Princeton University, USA
#             and University of Pau / CNRS / INRIA, France
# (c) Princeton University / California Institute of Technology and University of Pau / CNRS / INRIA
#                            April 2011
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#=====================================================================

# @configure_input@

#######################################

FC = @FC@
FCFLAGS = #@FCFLAGS@
MPIFC = @MPIFC@
MPILIBS = @MPILIBS@
FLAGS_CHECK = @FLAGS_CHECK@
FCFLAGS_f90 = @FCFLAGS_f90@ -I@top_builddir@ -I${SETUP}
FC_MODEXT = @FC_MODEXT@
FC_MODDIR = @FC_MODDIR@
 
FCCOMPILE_CHECK =@FCENV@ ${FC} ${FCFLAGS} $(FLAGS_CHECK)
MPIFCCOMPILE_CHECK =@FCENV@ ${MPIFC} ${FCFLAGS} $(FLAGS_CHECK)

CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = -I${SETUP} @CPPFLAGS@

## compilation directories
# B : build directory
B = @top_builddir@
# E : executables directory
E = $B/bin
# O : objects directory
O = $B/obj
# S_TOP : source file root directory
S_TOP = @top_srcdir@
# setup file directory
SETUP = $B/setup
# output file directory
OUTPUT = $B/OUTPUT_FILES

####
#### targets
####

# code subdirectories
SUBDIRS = \
	shared \
	create_header_file \
	compute_optimized_dumping_undo_att \
	meshfem3D \
	specfem3D \
	auxiliaries

# default targets
DEFAULT = \
	xcreate_header_file \
	xcompute_optimized_dumping_undo_att \
	xmeshfem3D \
	xspecfem3D \
	xcheck_buffers_1D \
	xcheck_buffers_2D \
	xcheck_buffers_corners_chunks \
	xcheck_buffers_faces_chunks \
	xcombine_vol_data \
	xcombine_surf_data \
	xcombine_AVS_DX \
	xconvolve_source_timefunction \
	xcreate_movie_AVS_DX \
	xcreate_movie_GMT_global \
	$(EMPTY_MACRO)

all: default

default: change_date_of_calling_code $(DEFAULT)

backup:
	cp -rp src setup DATA/Par_file* Makefile go_mesher* go_solver* mymachines bak

change_date_of_calling_code:
	touch src/specfem3D/specfem3D.F90

ifdef CLEAN
clean:
	-rm -f $(foreach dir, $(CLEAN), $($(dir)_OBJECTS) $($(dir)_MODULES) $($(dir)_SHARED_OBJECTS) $($(dir)_TARGETS))
else
clean:
	-rm -f $(foreach dir, $(SUBDIRS), $($(dir)_OBJECTS) $($(dir)_MODULES) $($(dir)_TARGETS))
endif

help:
	@echo "usage: make [executable]"
	@echo ""
	@echo "supported executables:"
	@echo "    xmeshfem3D"
	@echo "    xspecfem3D"
	@echo "    xcreate_header_file"
	@echo "    xcompute_optimized_dumping_undo_att"
	@echo "    xcheck_buffers_1D"
	@echo "    xcheck_buffers_2D"
	@echo "    xcheck_buffers_corners_chunks"
	@echo "    xcheck_buffers_faces_chunks"
	@echo "    xcombine_vol_data"
	@echo "    xcombine_surf_data"
	@echo "    xcombine_AVS_DX"
	@echo "    xconvolve_source_timefunction"
	@echo "    xcreate_movie_AVS_DX"
	@echo "    xcreate_movie_GMT_global"
	@echo ""

.PHONY: all default backup clean help

# Get dependencies and rules for building stuff
include $(patsubst %, ${S_TOP}/src/%/rules.mk, $(SUBDIRS))

##
## Shortcuts
##

# Shortcut for: <prog>/<xprog> -> bin/<xprog>
define target_shortcut
$(patsubst $E/%, %, $(1)): $(1)
.PHONY: $(patsubst $E/%, %, $(1))
$(patsubst $E/x%, %, $(1)): $(1)
.PHONY: $(patsubst $E/x%, %, $(1))
endef

# Shortcut for: dir -> src/dir/<targets in here>
define shortcut
$(1): $($(1)_TARGETS)
.PHONY: $(1)
$$(foreach target, $$(filter $E/%,$$($(1)_TARGETS)), $$(eval $$(call target_shortcut,$$(target))))
endef

$(foreach dir, $(SUBDIRS), $(eval $(call shortcut,$(dir))))

# Other old shortcuts
bak: backup
mesh: $E/xmeshfem3D
spec: $E/xspecfem3D
.PHONY: bak mesh spec

