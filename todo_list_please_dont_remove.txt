
To-do list for SPECFEM3D_GLOBE, by Dimitri Komatitsch:
------------------------------------------------------

Things that could be done in a future version 4.1:

- use a potential of (rho * u) instead of u in the fluid, in case of
  fluid-fluid discontinuities

- compatible with helioseismology / general Cowling formulation (will be done
  with Tarje Nissen-Meyer)

- symplectic time scheme (will be done by Tarje Nissen-Meyer and/or Jean-Paul Ampuero) (would be useful in the 2D version of the code as well):
Hi Jeroen, Perfect. I think talking to Jean-Paul Ampuero would be useful
as well because in Utrecht last year he had told us that
he had implemented some nice 4th-order symplectic schemes
in his version of SEM2D. Dimitri.
Jeroen Tromp wrote:
> Hi Dimitri:
> This is one of the first things Tarje and I plan to work on after he
> arrives.
> Jeroen
> Dimitri Komatitsch wrote:
>> Hi Jeroen,
>> I think the last important thing that is missing
>> in SPECFEM3D (and SPECFEM2D) is a fourth-order time scheme.
>> I think both Jean-Paul Ampuero and Tarje Nissen-Meyer
>> have worked on this, they will both be at Caltech
>> soon therefore maybe they could take care of adding it?
>> This would definitely increase the accuracy of very long
>> simulations (e.g. multi-orbit surface waves).
>> Dimitri.

- could be done by Vala:
we could use heuristic rules to make source and receiver detection much
faster and make these routines use far less memory. For instance using the
latitude, longitude and depth of each source or receiver we can quickly
determine if there is no chance for this source or receiver
to be located in the current slice; then that processor would immediately
switch to the next source or receiver; this could speedup the whole process by
a factor of 10 to 100 I guess when many sources are used (e.g. Vala uses
50,000) and/or many stations (Bernhard uses 20,000). We would
get rid of the bottleneck in locate_sources and locate_receivers
when one uses a huge number of sources (e.g. Vala -> 100000 sources)
or a very large number of stations (e.g. Bernhard -> 20000 stations):
in such a case there is a bunch of MPI_GATHERS which waste a lot
of memory and can even use all the available memory and make the run crash.
Vala partially fixed this problem by using subsets of 1000 stations, but after
careful analysis we have found a way of doing better and getting rid of all
the GATHERs and *all* the extra memory (this way we won't have to limit the number of sources to a maximum of 100000, as currently done in the solver).

---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

Things to do later:
-------------------

- afficher le modele PREM,les courbes de nombre de points par longueur d'onde et de stabilite et les worst elements (stability et nb pts per lambda) en OpenDX en serial sur le maitre dans le nouveau mesher, en copiant/collant ce qu'il faut depuis display_prem_sampling_doubling.f90 sur le master seulement (rank == 0)

---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

Things to add to the manual:
----------------------------

- ajouter les courbes de dispersion et stabilite au manuel pour tous les NEX classiques (160, 256, 380 etc) dans un Appendix special la-dessus; dire dans cet appendix que dans le outer core ce n'est bien sur pas Vs qui est represente mais Vp / 1.25 (on a pris 25 % de marge car on travaille en velocity potential dans le outer core, ce qui demande un echantillonnage un peu meilleur)

- supprimer sections qui decrivent write_AVS_mesh_quality, check_buffers*.f90, check_mesh_quality*.f90 etc du manuel une fois que le mesher et le solver auront ete fusionnes

