# Travis configuration
#
# Note: building Fortran code is not supported (yet): see https://docs.travis-ci.com/user/language-specific/
#       this is using C as a base and installs gfortran in the test environment

language: c
dist: bionic
os: linux

arch:
  - ppc64le  # IBM Power
#  - amd64    # travis default
#  - arm64    # ARM

compiler: gcc

# deprecated
#sudo: required

env:
  global:
    - FC=gfortran
    - MPIFC=mpif90
    - CC=gcc
    - OMP_NUM_THREADS=2
    - WORKDIR=`pwd`

  matrix:
    # for test cases, we use
    #   TESTID       - identification number for test
    #   TESTDIR      - test directory id
    #   TESTFLAGS    - flags used for configuration
    #   TESTCOV      - determines whether or not (0/1) code coverage flags are used
    #   CUDA         - flag for compilation with CUDA

    # code coverage: using coverage flags
    - TESTID=1 TESTDIR=1 TESTCOV=1 TESTFLAGS="" CUDA=false

    # code coverage: vectorization & openmp, using coverage flags
    - TESTID=2 TESTDIR=1 TESTCOV=1 TESTFLAGS="--enable-vectorization" CUDA=false

    # default test (with > make tests)
    - TESTID=3 TESTDIR=0 TESTCOV=0 TESTFLAGS="" CUDA=false

    # regional example w/ default configuration
    - TESTID=4 TESTDIR=1 TESTCOV=0 TESTFLAGS="" CUDA=false

    # regional example w/ vectorization
    - TESTID=5 TESTDIR=1 TESTCOV=0 TESTFLAGS="--enable-vectorization" CUDA=false

    # regional example w/ vectorization & openmp
    - TESTID=6 TESTDIR=1 TESTCOV=0 TESTFLAGS="--enable-vectorization --enable-openmp" CUDA=false

    # regional example with debug bounds checking
    - TESTID=7 TESTDIR=1 TESTCOV=0 TESTFLAGS="--enable-debug" CUDA=false

    # regional example with NGLL = 6
    - TESTID=8 TESTDIR=1 TESTCOV=0 TESTFLAGS="" CUDA=false

    # globe_small example
    - TESTID=9 TESTDIR=2 TESTCOV=0 TESTFLAGS="--enable-vectorization" CUDA=false

    # globe_small example with openmp
    - TESTID=10 TESTDIR=2 TESTCOV=0 TESTFLAGS="--enable-vectorization --enable-openmp" CUDA=false

    # point force example
    - TESTID=11 TESTDIR=3 TESTCOV=0 TESTFLAGS="" CUDA=false

    # regular kernel example
    - TESTID=12 TESTDIR=4 TESTCOV=0 TESTFLAGS="--enable-vectorization" CUDA=false

    # regional_sgloberani
    - TESTID=13 TESTDIR=5 TESTCOV=0 TESTFLAGS="--enable-vectorization" CUDA=false

    # global_full_sphericalharmonic_model
    #- TESTID=14 TESTDIR=6 TESTCOV=0 TESTFLAGS="--enable-vectorization" CUDA=false

    # regional s40rts compilation w/ CUDA
    - TESTID=15 TESTDIR=7 TESTCOV=0 TESTFLAGS="--with-cuda=cuda5" CUDA=true

    # regional s40rts compilation w/ OpenCL (provided from CUDA library)
    - TESTID=16 TESTDIR=7 TESTCOV=0 TESTFLAGS="--with-opencl" CUDA=true OPENCL=true

    # regional_small_adjoint - pure adjoint example
    #- TESTID=17 TESTDIR=8 TESTCOV=0 TESTFLAGS="" CUDA=false

    # regional mars
    - TESTID=18 TESTDIR=9 TESTCOV=0 TESTFLAGS="" CUDA=false

    # regional moon
    - TESTID=19 TESTDIR=10 TESTCOV=0 TESTFLAGS="" CUDA=false

    # regional LDDRK
    - TESTID=20 TESTDIR=11 TESTCOV=0 TESTFLAGS="--enable-vectorization" CUDA=false

    # regional noise example
    - TESTID=21 TESTDIR=12 TESTCOV=0 TESTFLAGS="--enable-vectorization" CUDA=false


# additional ARM tests
jobs:
  include:
  - arch: arm64
    env: TESTID=4 TESTDIR=1 TESTCOV=0 TESTFLAGS="" CUDA=false
  - arch: arm64
    env: TESTID=7 TESTDIR=1 TESTCOV=0 TESTFLAGS="--enable-debug" CUDA=false


before_install:
  # informations on git
  - |
    git --version
    git rev-parse --verify HEAD
    git branch -a

  # infos on commits
  - |
    echo "request: Branch($TRAVIS_BRANCH) Pull Request($TRAVIS_PULL_REQUEST) Tag($TRAVIS_TAG)"
    echo "commit : Commit($TRAVIS_COMMIT) Range($TRAVIS_COMMIT_RANGE)"

  # recommended for MPI projects to unset CC: see https://docs.travis-ci.com/user/languages/c
  #- test -n $CC && unset CC

  # updates repository
  - |
    travis_retry sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6B05F25D762E3157
    travis_retry sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 78BD65473CB3BD13
    travis_retry sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 762E3157
    travis_retry sudo apt-get update


install:
  - bash .travis/run_install.sh


script:
  - bash .travis/run_tests.sh


after_success:
  ###########################################################
  # code coverage
  ###########################################################
  - |
    if [ "$TESTCOV" == "1" ]; then
      gcov --version
      echo `pwd`
      ls -al obj/
    fi

  # produces coverage reports (done manually because of different naming for source & object files)
  - |
    if [ "$TESTCOV" == "1" ]; then
      find obj/ -iname '*.o' | sort | awk '{print "gcov -o obj/ "$1;}'
      # executes gcov-commands
      find obj/ -iname '*.o' | sort | awk '{print "gcov -o obj/ "$1;}' | sh
    fi

  # code coverage:
  # see script : https://github.com/codecov/codecov-bash/blob/master/codecov
  # see example: https://github.com/codecov/example-fortran/blob/master/.travis.yml
  - if [ "$TESTCOV" == "1" ]; then bash <(curl -s https://codecov.io/bash) -X gcov; fi
